<![CDATA[
import { ModelProvider } from 'langchain/providers';
import { OpenAIClient } from 'langchain/providers/openai';

class TogetherProvider extends ModelProvider {
  constructor(config) {
    super(config);
    
    // Load TOGETHER_API_KEY from environment variables
    const TOGETHER_API_KEY = process.env.TOGETHER_API_KEY;

    // Set together_client with OpenAI client using API key and base URL
    this.together_client = new OpenAIClient({
      apiKey: TOGETHER_API_KEY,
      baseURL: 'https://api.together.xyz/v1',
    });
  }

  // Implement empty initialize() method
  async initialize() {
    // No initialization logic for now
  }

  // Stub all other methods for now
  async call(prompt, options) {
    // Implement call method later
  }

  async generatePrompt(example, options) {
    // Implement generatePrompt method later
  }

  async generateBatchPrompt(examples, options) {
    // Implement generateBatchPrompt method later
  }

  async generatePromptMulti(examples, options) {
    // Implement generatePromptMulti method later
  }

  async generateBatchResponse(prompts, options) {
    // Implement generateBatchResponse method later
  }

  async generateResponse(prompt, options) {
    // Implement generateResponse method later
  }

  async generateBatchResponseMulti(prompts, options) {
    // Implement generateBatchResponseMulti method later
  }
}

export default TogetherProvider;
]]>